{
    "key_": "nndeploy.dag.Graph",
    "name_": "face_swap_seg.json",
    "desc_": "Graph: Graph for nndeploy in python",
    "device_type_": "kDeviceTypeCodeCpu:0",
    "is_dynamic_input_": false,
    "inputs_": [],
    "is_dynamic_output_": false,
    "outputs_": [],
    "is_graph_": true,
    "parallel_type_": "kParallelTypeNone",
    "is_inner_": false,
    "node_type_": "Intermediate",
    "is_time_profile_": false,
    "is_debug_": false,
    "is_external_stream_": false,
    "is_graph_node_share_stream_": true,
    "queue_max_size_": 16,
    "is_loop_max_flag_": true,
    "loop_count_": -1,
    "node_repository_": [
        {
            "key_": "nndeploy::codec::OpenCvImageDecode",
            "name_": "OpenCvImageDecode_15",
            "desc_": "Decode image using OpenCV, from image path to cv::Mat, default color space is BGR",
            "device_type_": "kDeviceTypeCodeCpu:0",
            "is_dynamic_input_": false,
            "inputs_": [],
            "is_dynamic_output_": false,
            "outputs_": [
                {
                    "desc_": "output_0",
                    "type_": "ndarray",
                    "name_": "OpenCvImageDecode_15@output_0"
                }
            ],
            "node_type_": "Input",
            "path_": "/home/always/github/public/nndeploy/resources/images/musk.jpg",
            "node_repository_": []
        },
        {
            "key_": "nndeploy::codec::OpenCvImageDecode",
            "name_": "OpenCvImageDecode_16",
            "desc_": "Decode image using OpenCV, from image path to cv::Mat, default color space is BGR",
            "device_type_": "kDeviceTypeCodeCpu:0",
            "is_dynamic_input_": false,
            "inputs_": [],
            "is_dynamic_output_": false,
            "outputs_": [
                {
                    "desc_": "output_0",
                    "type_": "ndarray",
                    "name_": "OpenCvImageDecode_16@output_0"
                }
            ],
            "node_type_": "Input",
            "path_": "/home/always/github/public/nndeploy/resources/images/speed.png",
            "node_repository_": []
        },
        {
            "key_": "nndeploy.face.InsightFaceAnalysis",
            "name_": "InsightFaceAnalysis_17",
            "desc_": "InsightFace Analysis: get face analysis from image",
            "device_type_": "kDeviceTypeCodeCpu:0",
            "is_dynamic_input_": false,
            "inputs_": [
                {
                    "desc_": "input_0",
                    "type_": "ndarray",
                    "name_": "OpenCvImageDecode_15@output_0"
                }
            ],
            "is_dynamic_output_": false,
            "outputs_": [
                {
                    "desc_": "output_0",
                    "type_": "list[Face]",
                    "name_": "InsightFaceAnalysis_17@output_0"
                }
            ],
            "node_type_": "Intermediate",
            "insightface_name_": "buffalo_l",
            "providers_": [
                "CPUExecutionProvider"
            ],
            "is_one_face_": true,
            "ctx_id": 0,
            "node_repository_": []
        },
        {
            "key_": "nndeploy.face.InsightFaceAnalysis",
            "name_": "nndeploy.face.InsightFaceAnalysis_18",
            "desc_": "InsightFace Analysis: get face analysis from image",
            "device_type_": "kDeviceTypeCodeCpu:0",
            "is_dynamic_input_": false,
            "inputs_": [
                {
                    "desc_": "input_0",
                    "type_": "ndarray",
                    "name_": "OpenCvImageDecode_16@output_0"
                }
            ],
            "is_dynamic_output_": false,
            "outputs_": [
                {
                    "desc_": "output_0",
                    "type_": "list[Face]",
                    "name_": "nndeploy.face.InsightFaceAnalysis_18@output_0"
                }
            ],
            "node_type_": "Intermediate",
            "insightface_name_": "buffalo_l",
            "providers_": [
                "CPUExecutionProvider"
            ],
            "is_one_face_": true,
            "ctx_id": 0,
            "node_repository_": []
        },
        {
            "key_": "nndeploy.face.InsightFaceSwapper",
            "name_": "InsightFaceSwapper_19",
            "desc_": "InsightFace Swapper: swap face from image",
            "device_type_": "kDeviceTypeCodeCpu:0",
            "is_dynamic_input_": false,
            "inputs_": [
                {
                    "desc_": "input_0",
                    "type_": "list[Face]",
                    "name_": "InsightFaceAnalysis_17@output_0"
                },
                {
                    "desc_": "input_1",
                    "type_": "list[Face]",
                    "name_": "nndeploy.face.InsightFaceAnalysis_18@output_0"
                },
                {
                    "desc_": "input_2",
                    "type_": "ndarray",
                    "name_": "OpenCvImageDecode_16@output_0"
                }
            ],
            "is_dynamic_output_": false,
            "outputs_": [
                {
                    "desc_": "output_0",
                    "type_": "ndarray",
                    "name_": "InsightFaceSwapper_19@output_0"
                }
            ],
            "node_type_": "Intermediate",
            "mouth_mask_": false,
            "show_mouth_mask_box_": false,
            "mask_down_size_": 0.5,
            "mask_feather_ratio_": 8,
            "mask_size_": 1,
            "model_path_": "/home/always/github/Deep-Live-Cam/models/inswapper_128_fp16.onnx",
            "providers_": [
                "CPUExecutionProvider"
            ],
            "node_repository_": []
        },
        {
            "key_": "nndeploy.gan.GFPGAN",
            "name_": "GFPGAN_20",
            "desc_": "GFPGAN: Make faces clearer",
            "device_type_": "kDeviceTypeCodeCpu:0",
            "is_dynamic_input_": false,
            "inputs_": [
                {
                    "desc_": "input_0",
                    "type_": "ndarray",
                    "name_": "InsightFaceSwapper_19@output_0"
                }
            ],
            "is_dynamic_output_": false,
            "outputs_": [
                {
                    "desc_": "output_0",
                    "type_": "ndarray",
                    "name_": "GFPGAN_20@output_0"
                }
            ],
            "node_type_": "Intermediate",
            "model_path_": "/home/always/github/Deep-Live-Cam/models/GFPGANv1.4.pth",
            "upscale_": 1,
            "node_repository_": []
        },
        {
            "key_": "nndeploy::codec::OpenCvImageEncode",
            "name_": "OpenCvImageEncode_21",
            "desc_": "Encode image using OpenCV, from cv::Mat to image file, supports common image formats",
            "device_type_": "kDeviceTypeCodeCpu:0",
            "is_dynamic_input_": false,
            "inputs_": [
                {
                    "desc_": "input_0",
                    "type_": "ndarray",
                    "name_": "GFPGAN_20@output_0"
                }
            ],
            "is_dynamic_output_": false,
            "outputs_": [],
            "node_type_": "Output",
            "path_": "/home/always/github/public/nndeploy/resources/images/musk_speed.png",
            "node_repository_": []
        },
        {
            "key_": "nndeploy::preprocess::CvtResizeNormTrans",
            "name_": "CvtResizeNormTrans_12",
            "desc_": "cv::Mat to device::Tensor[cvtcolor->resize->normalize->transpose]",
            "device_type_": "kDeviceTypeCodeCpu:0",
            "is_dynamic_input_": false,
            "inputs_": [
                {
                    "desc_": "input_0",
                    "type_": "ndarray",
                    "name_": "GFPGAN_20@output_0"
                }
            ],
            "is_dynamic_output_": false,
            "outputs_": [
                {
                    "desc_": "output_0",
                    "type_": "Tensor",
                    "name_": "CvtResizeNormTrans_12@output_0"
                }
            ],
            "node_type_": "Intermediate",
            "param_": {
                "src_pixel_type_": "kPixelTypeBGR",
                "dst_pixel_type_": "kPixelTypeRGB",
                "interp_type_": "kInterpTypeLinear",
                "h_": 1024,
                "w_": 1024,
                "data_type_": "kDataTypeCodeFp32",
                "data_format_": "kDataFormatNCHW",
                "normalize_": true,
                "scale_": [
                    0.003921568859368563,
                    0.003921568859368563,
                    0.003921568859368563,
                    0.003921568859368563
                ],
                "mean_": [
                    0.5,
                    0.5,
                    0.5,
                    0.5
                ],
                "std_": [
                    1,
                    1,
                    1,
                    1
                ]
            },
            "node_repository_": []
        },
        {
            "key_": "nndeploy::infer::Infer",
            "name_": "Infer_13",
            "desc_": "Universal Inference Node - Enables cross-platform model deployment with multiple inference backends while maintaining native performance",
            "device_type_": "kDeviceTypeCodeCpu:0",
            "is_dynamic_input_": true,
            "inputs_": [
                {
                    "desc_": "input_0",
                    "type_": "Tensor",
                    "name_": "CvtResizeNormTrans_12@output_0"
                }
            ],
            "is_dynamic_output_": true,
            "outputs_": [
                {
                    "desc_": "output_0",
                    "type_": "Tensor",
                    "name_": "Infer_13@output_0"
                }
            ],
            "node_type_": "Intermediate",
            "type_": "kInferenceTypeOnnxRuntime",
            "param_": {
                "model_type_": "kModelTypeOnnx",
                "is_path_": true,
                "model_value_": [
                    "/home/lds/modelscope/nndeploy/segment/RMBGV1.4.slim.onnx"
                ],
                "external_model_data_": [
                    ""
                ],
                "device_type_": "kDeviceTypeCodeCpu:0",
                "num_thread_": 1,
                "gpu_tune_kernel_": 1,
                "input_num_": 1,
                "input_name_": [
                    ""
                ],
                "input_shape_": [
                    [
                        -1,
                        -1,
                        -1,
                        -1
                    ]
                ],
                "output_num_": 1,
                "output_name_": [
                    ""
                ],
                "encrypt_type_": "kEncryptTypeNone",
                "license_": "",
                "share_memory_mode_": "kShareMemoryTypeNoShare",
                "precision_type_": "kPrecisionTypeFp32",
                "power_type_": "kPowerTypeNormal",
                "is_dynamic_shape_": false,
                "min_shape_": {
                    "input_0": [
                        -1,
                        -1,
                        -1,
                        -1
                    ]
                },
                "opt_shape_": {
                    "input_0": [
                        -1,
                        -1,
                        -1,
                        -1
                    ]
                },
                "max_shape_": {
                    "input_0": [
                        -1,
                        -1,
                        -1,
                        -1
                    ]
                },
                "parallel_type_": "kParallelTypeNone",
                "worker_num_": 1
            },
            "node_repository_": []
        },
        {
            "key_": "nndeploy::segment::RMBGPostProcess",
            "name_": "RMBGPostProcess_14",
            "desc_": "Segment RMBG postprocess[device::Tensor->SegmentResult]",
            "device_type_": "kDeviceTypeCodeCpu:0",
            "is_dynamic_input_": false,
            "inputs_": [
                {
                    "desc_": "input_0",
                    "type_": "ndarray",
                    "name_": "GFPGAN_20@output_0"
                },
                {
                    "desc_": "input_1",
                    "type_": "Tensor",
                    "name_": "Infer_13@output_0"
                }
            ],
            "is_dynamic_output_": false,
            "outputs_": [
                {
                    "desc_": "output_0",
                    "type_": "SegmentResult",
                    "name_": "RMBGPostProcess_14@output_0"
                }
            ],
            "node_type_": "Intermediate",
            "param_": {
                "version": 14
            },
            "node_repository_": []
        },
        {
            "key_": "nndeploy::segment::DrawMask",
            "name_": "DrawMask_15",
            "desc_": "Draw segmentation mask on input cv::Mat image based on segmentation results[cv::Mat->cv::Mat]",
            "device_type_": "kDeviceTypeCodeCpu:0",
            "is_dynamic_input_": false,
            "inputs_": [
                {
                    "desc_": "input_0",
                    "type_": "ndarray",
                    "name_": "GFPGAN_20@output_0"
                },
                {
                    "desc_": "input_1",
                    "type_": "SegmentResult",
                    "name_": "RMBGPostProcess_14@output_0"
                }
            ],
            "is_dynamic_output_": false,
            "outputs_": [
                {
                    "desc_": "output_0",
                    "type_": "ndarray",
                    "name_": "DrawMask_15@output_0"
                }
            ],
            "node_type_": "Intermediate",
            "node_repository_": []
        },
        {
            "key_": "nndeploy::codec::OpenCvImageEncode",
            "name_": "OpenCvImageEncode_16",
            "desc_": "Encode image using OpenCV, from cv::Mat to image file, supports common image formats",
            "device_type_": "kDeviceTypeCodeCpu:0",
            "is_dynamic_input_": false,
            "inputs_": [
                {
                    "desc_": "input_0",
                    "type_": "ndarray",
                    "name_": "DrawMask_15@output_0"
                }
            ],
            "is_dynamic_output_": false,
            "outputs_": [],
            "node_type_": "Output",
            "path_": "/home/always/github/public/nndeploy/docs/image/demo/detect/sample_rmbg.jpg",
            "node_repository_": []
        }
    ],
    "nndeploy_ui_layout": {
        "OpenCvImageDecode_15": {
            "x": -2214.8104553222656,
            "y": -622.1725036621093
        },
        "OpenCvImageDecode_16": {
            "x": -2214.8104553222656,
            "y": -334.47250366210926
        },
        "InsightFaceAnalysis_17": {
            "x": -1914.8104553222656,
            "y": -622.1725036621093
        },
        "nndeploy.face.InsightFaceAnalysis_18": {
            "x": -1914.8104553222656,
            "y": -334.47250366210926
        },
        "InsightFaceSwapper_19": {
            "x": -1632.8104553222656,
            "y": -622.1725036621093
        },
        "GFPGAN_20": {
            "x": -1358.8104553222656,
            "y": -622.1725036621093
        },
        "OpenCvImageEncode_21": {
            "x": -1358.8104553222656,
            "y": -422.02250366210933
        },
        "CvtResizeNormTrans_12": {
            "x": -1034.8104553222656,
            "y": -622.1725036621093
        },
        "Infer_13": {
            "x": -695.8104553222656,
            "y": -622.1725036621093
        },
        "RMBGPostProcess_14": {
            "x": -414.8104553222656,
            "y": -622.1725036621093
        },
        "DrawMask_15": {
            "x": -122.81045532226562,
            "y": -622.1725036621093
        },
        "OpenCvImageEncode_16": {
            "x": 149.18954467773438,
            "y": -622.1725036621093
        }
    }
}